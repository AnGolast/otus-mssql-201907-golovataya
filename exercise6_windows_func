--1. Напишите запрос с временной таблицей и перепишите его с табличной переменной. Сравните планы. 
--Сделать расчет суммы продаж нарастающим итогом по месяцам с 2015 года (в рамках одного месяца он будет одинаковый, нарастать будет в течение времени выборки)
--Выведите id продажи, название клиента, дату продажи, сумму продажи, сумму нарастающим итогом

;with summa as (select inv.InvoiceID, CustomerName, InvoiceDate, sum(ExtendedPrice) as [sum]
			   from Sales.Invoices as inv 
				join Sales.Customers as cust on inv.CustomerID = cust.CustomerID
				join Sales.InvoiceLines as inv_lin on inv_lin.InvoiceID = inv.InvoiceID
			   group by inv.InvoiceID, CustomerName, InvoiceDate )

select InvoiceID, CustomerName,InvoiceDate,[sum],itog
from summa
join (
		select sum ([sum]) as itog,month(InvoiceDate) as [month], year(InvoiceDate) as [year]
				from summa										 
		group by month(InvoiceDate),year(InvoiceDate)
		) as itog on month(summa.InvoiceDate) >= itog.[month]
					and year(summa.InvoiceDate) >= itog.[year]
order by InvoiceDate					;
--2. Если вы брали предложенный выше запрос, то сделайте расчет суммы нарастающим итогом с помощью оконной функции.
;with summa as (select inv.InvoiceID, CustomerName, InvoiceDate, sum(ExtendedPrice) as [sum]
			   from Sales.Invoices as inv 
				join Sales.Customers as cust on inv.CustomerID = cust.CustomerID
				join Sales.InvoiceLines as inv_lin on inv_lin.InvoiceID = inv.InvoiceID
			   group by inv.InvoiceID, CustomerName, InvoiceDate
			   )

select InvoiceID,
	   CustomerName,
	   InvoiceDate,
	   [sum],
	   sum([sum]) over (order by year(InvoiceDate),month(InvoiceDate)) as itog
from summa
order by InvoiceDate;

--Сравните 2 варианта запроса - через windows function и без них. Написать какой быстрее выполняется, сравнить по set statistics time on;


--2. Вывести список 2х самых популярных продуктов (по кол-ву проданных) в каждом месяце за 2016й год 
--(по 2 самых популярных продукта в каждом месяце)
;with quantity as (
select distinct month(OrderDate) as [month],
	   Description,
	   sum(Quantity) as Mquantity,
	   row_number() over (partition by month(OrderDate) order by sum(Quantity) desc) as num
from Sales.OrderLines as ordlin
join Sales.Orders as ord on ordlin.OrderID=ord.OrderID 
where year(OrderDate) = 2016 
group by month(OrderDate),Description )

select [month], Description, Mquantity, num 
from quantity
where num <3;


